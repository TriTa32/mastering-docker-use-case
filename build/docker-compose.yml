version: '3.8'

services:
  # ---------------------------
  # API Gateway
  # ---------------------------
  api-gateway:
    build: 
        context: ../application/api-gateway/
        dockerfile: Dockerfile
    tty: true
    init: true
    privileged: true
    ports:
        - 8080:8080
    expose:
        - "8080"
    networks:
        - build_backend
    hostname: api-gateway
    container_name: api-gateway
    environment:
        - SPRING_PROFILES_ACTIVE=docker
    # image: build_api-gateway
  # ---------------------------
  # Service One
  # ---------------------------
  service-one:
    build: 
        context: ../application/service-one/
        dockerfile: Dockerfile
    depends_on:
      - service-one-db
    tty: true
    init: true
    privileged: true
    ports:
        - 8082:8082
    networks:
        - build_backend
    hostname: service-one
    container_name: service-one
    environment:
        - SPRING_PROFILES_ACTIVE=docker
    # image: build_service-one

  # ---------------------------
  # Service One Database
  # ---------------------------
  service-one-db:
    tty: true
    init: true
    privileged: true
    ports:
        - 27017:27017
    expose:
        - "27017"
    networks:
        - build_backend
    hostname: serviceonedb
    container_name: service-one-db
    environment:
        - MONGODB_USER=service-one
        - MONGODB_PASS=service-one
        - MONGO_DATA_DIR=/data/db
        - MONGO_LOG_DIR=/dev/null
    volumes:
        - build_mongodata:/data/db
    image: mongo:3.7
    command: mongod --smallfiles

  # ---------------------------
  # Service Two
  # ---------------------------
  service-two:
    build: 
        context: ../application/service-two/
        dockerfile: Dockerfile
    depends_on:
        - service-two-db
    tty: true
    init: true
    privileged: true
    ports:
        - 8084:8084
    networks:
        - build_backend
    hostname: service-two
    container_name: service-two
    environment:
        - SPRING_PROFILES_ACTIVE=docker
    # image: build_service-two

  # ---------------------------
  # Service Two Database
  # ---------------------------
  service-two-db:
    tty: true
    init: true
    privileged: true
    ports:
        - 3310:3306
    expose:
        - "3310"
    networks:
        - build_backend
    hostname: servicetwodb
    container_name: service-two-db
    environment:
        - MYSQL_ROOT_PASSWORD=root123
        - MYSQL_DATABASE=service-two
        - MYSQL_USER=service-two
        - MYSQL_PASSWORD=service-two
    image: mysql/mysql-server:latest

  # ---------------------------
  # Web Application
  # ---------------------------
  web-application:
    build: 
        context: ../application/web-application/
        dockerfile: Dockerfile
    tty: true
    init: true
    privileged: true
    ports:
        - 80:4200
    networks:
        - build_frontend
    container_name: web-application
    volumes:
        - dist:/usr/share/nginx/html
    # image: build_web-application

  # ---------------------------
  # Messaging Queue Cluster
  # ---------------------------
  rabbit:
    tty: true
    init: true
    privileged: true
    ports:
        - 5672:5672
        - 15672:15672
    expose:
        - "15672"
    networks:
        - build_backend
    hostname: rabbitmq
    container_name: rabbit
    environment:
        - CLUSTERED=true
        - RAM_NODE=true
        - CLUSTER_WITH=rabbitmq
        - RABBITMQ_DEFAULT_USER=docker
        - RABBITMQ_DEFAULT_PASS=docker
    image: rabbitmq:3.8-management-alpine

  # ---------------------------
  # Registration and
  # Discovery Cluster
  # ---------------------------
  consul:
    tty: true
    init: true
    privileged: true
    ports:
        - 8500:8500
        - 8600:8600
    expose:
        - 8500
        - 8600
    networks:
        - build_backend
    hostname: consul
    container_name: consul
    volumes:
        - data:/consul/data
    image: consul:1.7.3
    command: agent -server -client 0.0.0.0 -ui -bootstrap-expect=1
        -data-dir=consul/data -datacenter=blr

networks:
    build_frontend:
        name: build_frontend
        driver: bridge
    build_backend:
        name: build_backend
        driver: bridge

volumes:
  build_mongodata:
  data:
  dist:
  